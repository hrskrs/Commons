apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId rootProject.ext.applicationId
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode = rootProject.ext.versionCode
    versionName = rootProject.ext.versionName

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    releaseSign {
      Properties properties = new Properties()
      properties.load(project.rootProject.file('local.properties').newDataInputStream())
      storeFile file(properties.getProperty('STORE_FILE'))
      storePassword properties.getProperty('STORE_PASSWORD')
      keyAlias properties.getProperty('KEY_ALIAS')
      keyPassword properties.getProperty('KEY_PASSWORD')
    }
  }

  buildTypes {
    debug {
      debuggable true
      minifyEnabled false
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled false
      signingConfig signingConfigs.releaseSign
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  productFlavors {
    dev {
      applicationIdSuffix ".debug"
      //TODO: add development parameters
    }
    prod {
      //TODO: add production parameters
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/rxjava.properties'
  }

  //Append versionName to apk
  applicationVariants.all {
    variant ->
      variant.outputs.each {
        output ->
          def file = output.outputFile
          output.outputFile = new File(
              file.parent,
              file.name.replace(".apk", "-${variant.versionName}.apk")
          )
      }
  }
}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')

  compile "com.android.support:appcompat-v7:$supportLibVersion"
  compile "com.android.support:design:$supportLibVersion"
  compile "com.android.support:cardview-v7:$supportLibVersion"
  compile "com.android.support:support-v13:$supportLibVersion"
  compile "com.jakewharton:butterknife:$butterKnifeVersion"
  annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

  compile project(':commonslib')
}
